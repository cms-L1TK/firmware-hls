#ifndef TopFunctions_VMSMER_parameters_h
#define TopFunctions_VMSMER_parameters_h

// Hardcoded number of memories and masks from the wiring.
// Generated by generate_VMRCM.py

// The functions that returns parameters and LUTs
template<TF::layerDisk LayerDisk> const int* getPhiCorrTable();
template<TF::layerDisk LayerDisk> const int* getMETable();

// VMPhiCorr LUTs
template<> inline const int* getPhiCorrTable<TF::L1>(){
  static int lut[] = 
#if __has_include("../emData/VMRCM/tables/VMPhiCorrL1.tab")
#  include "../emData/VMRCM/tables/VMPhiCorrL1.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getPhiCorrTable<TF::L2>(){
  static int lut[] = 
#if __has_include("../emData/VMRCM/tables/VMPhiCorrL2.tab")
#  include "../emData/VMRCM/tables/VMPhiCorrL2.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getPhiCorrTable<TF::L3>(){
  static int lut[] = 
#if __has_include("../emData/VMRCM/tables/VMPhiCorrL3.tab")
#  include "../emData/VMRCM/tables/VMPhiCorrL3.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getPhiCorrTable<TF::L4>(){
  static int lut[] = 
#if __has_include("../emData/VMRCM/tables/VMPhiCorrL4.tab")
#  include "../emData/VMRCM/tables/VMPhiCorrL4.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getPhiCorrTable<TF::L5>(){
  static int lut[] = 
#if __has_include("../emData/VMRCM/tables/VMPhiCorrL5.tab")
#  include "../emData/VMRCM/tables/VMPhiCorrL5.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getPhiCorrTable<TF::L6>(){
  static int lut[] = 
#if __has_include("../emData/VMRCM/tables/VMPhiCorrL6.tab")
#  include "../emData/VMRCM/tables/VMPhiCorrL6.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getPhiCorrTable<TF::D1>(){
  return nullptr;
}
template<> inline const int* getPhiCorrTable<TF::D2>(){
  return nullptr;
}
template<> inline const int* getPhiCorrTable<TF::D3>(){
  return nullptr;
}
template<> inline const int* getPhiCorrTable<TF::D4>(){
  return nullptr;
}
template<> inline const int* getPhiCorrTable<TF::D5>(){
  return nullptr;
}

// ME Tables
template<> inline const int* getMETable<TF::L1>(){
  static int lut[] =
#if __has_include("../emData/VMRCM/tables/VMRME_L1.tab")
#  include "../emData/VMRCM/tables/VMRME_L1.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getMETable<TF::L2>(){
  static int lut[] =
#if __has_include("../emData/VMRCM/tables/VMRME_L2.tab")
#  include "../emData/VMRCM/tables/VMRME_L2.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getMETable<TF::L3>(){
  static int lut[] =
#if __has_include("../emData/VMRCM/tables/VMRME_L3.tab")
#  include "../emData/VMRCM/tables/VMRME_L3.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getMETable<TF::L4>(){
  static int lut[] =
#if __has_include("../emData/VMRCM/tables/VMRME_L4.tab")
#  include "../emData/VMRCM/tables/VMRME_L4.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getMETable<TF::L5>(){
  static int lut[] =
#if __has_include("../emData/VMRCM/tables/VMRME_L5.tab")
#  include "../emData/VMRCM/tables/VMRME_L5.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getMETable<TF::L6>(){
  static int lut[] =
#if __has_include("../emData/VMRCM/tables/VMRME_L6.tab")
#  include "../emData/VMRCM/tables/VMRME_L6.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getMETable<TF::D1>(){
  static int lut[] =
#if __has_include("../emData/VMRCM/tables/VMRME_D1.tab")
#  include "../emData/VMRCM/tables/VMRME_D1.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getMETable<TF::D2>(){
  static int lut[] =
#if __has_include("../emData/VMRCM/tables/VMRME_D2.tab")
#  include "../emData/VMRCM/tables/VMRME_D2.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getMETable<TF::D3>(){
  static int lut[] =
#if __has_include("../emData/VMRCM/tables/VMRME_D3.tab")
#  include "../emData/VMRCM/tables/VMRME_D3.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getMETable<TF::D4>(){
  static int lut[] =
#if __has_include("../emData/VMRCM/tables/VMRME_D4.tab")
#  include "../emData/VMRCM/tables/VMRME_D4.tab"
#else
  {};
#endif
  return lut;
}
template<> inline const int* getMETable<TF::D5>(){
  static int lut[] =
#if __has_include("../emData/VMRCM/tables/VMRME_D5.tab")
#  include "../emData/VMRCM/tables/VMRME_D5.tab"
#else
  {};
#endif
  return lut;
}

#endif
